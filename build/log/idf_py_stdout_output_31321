[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/mkostenko/esp32_repos/8x8/build/bootloader/esp-idf/esptool_py && /Users/mkostenko/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/mkostenko/esp32_repos/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/mkostenko/esp32_repos/8x8/build/bootloader/bootloader.bin
Bootloader binary size 0x5480 bytes. 0x2b80 bytes (34%) free.
[2/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/10] No install step for 'bootloader'
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable example-max7219-7seg.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/mkostenko/esp32_repos/8x8/build/example-max7219-7seg.bin
[9/10] cd /Users/mkostenko/esp32_repos/8x8/build/esp-idf/esptool_py && /Users/mkostenko/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/mkostenko/esp32_repos/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/mkostenko/esp32_repos/8x8/build/partition_table/partition-table.bin /Users/mkostenko/esp32_repos/8x8/build/example-max7219-7seg.bin
example-max7219-7seg.bin binary size 0x3a090 bytes. Smallest app partition is 0x100000 bytes. 0xc5f70 bytes (77%) free.
[9/10] cd /Users/mkostenko/esp32_repos/esp-idf/components/esptool_py && /Users/mkostenko/.espressif/tools/cmake/3.30.2/CMake.app/Contents/bin/cmake -D IDF_PATH=/Users/mkostenko/esp32_repos/esp-idf -D "SERIAL_TOOL=/Users/mkostenko/.espressif/python_env/idf5.2_py3.9_env/bin/python;;/Users/mkostenko/esp32_repos/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/mkostenko/esp32_repos/8x8/build -P /Users/mkostenko/esp32_repos/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem101 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 example-max7219-7seg.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbmodem101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded Flash 4MB (XMC), Embedded PSRAM 2MB (AP_3v3)
Crystal is 40MHz
MAC: e8:06:90:95:65:a4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0004afff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21632 bytes to 13314...
Writing at 0x00000000... (100 %)
Wrote 21632 bytes (13314 compressed) at 0x00000000 in 0.5 seconds (effective 381.2 kbit/s)...
Hash of data verified.
Compressed 237712 bytes to 124592...
Writing at 0x00010000... (12 %)
Writing at 0x0001c665... (25 %)
Writing at 0x00023fa4... (37 %)
Writing at 0x0002aae7... (50 %)
Writing at 0x00030bac... (62 %)
Writing at 0x000399e1... (75 %)
Writing at 0x0003f8e6... (87 %)
Writing at 0x00046305... (100 %)
Wrote 237712 bytes (124592 compressed) at 0x00010000 in 2.4 seconds (effective 785.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 315.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
