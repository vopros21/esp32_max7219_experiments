[1/15] Performing build step for 'bootloader'
[1/1] cd /Users/mkostenko/esp32_repos/8x8/build/bootloader/esp-idf/esptool_py && /Users/mkostenko/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/mkostenko/esp32_repos/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/mkostenko/esp32_repos/8x8/build/bootloader/bootloader.bin
Bootloader binary size 0x5480 bytes. 0x2b80 bytes (34%) free.
[2/15] No install step for 'bootloader'
[3/15] Building C object esp-idf/usb/CMakeFiles/__idf_usb.dir/usb_private.c.obj
[4/15] Building C object esp-idf/usb/CMakeFiles/__idf_usb.dir/usb_helpers.c.obj
[5/15] Building C object esp-idf/usb/CMakeFiles/__idf_usb.dir/hub.c.obj
[6/15] Building C object esp-idf/usb/CMakeFiles/__idf_usb.dir/enum.c.obj
[7/15] Completed 'bootloader'
[8/15] Building C object esp-idf/usb/CMakeFiles/__idf_usb.dir/usbh.c.obj
[9/15] Building C object esp-idf/usb/CMakeFiles/__idf_usb.dir/hcd_dwc.c.obj
[10/15] Building C object esp-idf/usb/CMakeFiles/__idf_usb.dir/usb_host.c.obj
[11/15] Linking C static library esp-idf/usb/libusb.a
[12/15] Generating ld/sections.ld
[13/15] Linking CXX executable example-max7219-7seg.elf
[14/15] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/mkostenko/esp32_repos/8x8/build/example-max7219-7seg.bin
[15/15] cd /Users/mkostenko/esp32_repos/8x8/build/esp-idf/esptool_py && /Users/mkostenko/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/mkostenko/esp32_repos/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/mkostenko/esp32_repos/8x8/build/partition_table/partition-table.bin /Users/mkostenko/esp32_repos/8x8/build/example-max7219-7seg.bin
example-max7219-7seg.bin binary size 0x3a080 bytes. Smallest app partition is 0x100000 bytes. 0xc5f80 bytes (77%) free.
